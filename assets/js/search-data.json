{
  
    
        "post0": {
            "title": "Title",
            "content": "import nltk from nltk import sent_tokenize,word_tokenize . nltk.download(&#39;punkt&#39;) . [nltk_data] Downloading package punkt to [nltk_data] C: Users LENOVO AppData Roaming nltk_data... [nltk_data] Package punkt is already up-to-date! . True . text= open(&#39;New Text Document.txt&#39;) . text = open(&#39;bentest.txt&#39;,&#39;r&#39;) . mytext = text.read() . textdata=&quot;Madam, an hour before the worshipp&#39;d sun Peer&#39;d forth the golden window of the east, A troubled mind drave me to walk abroad; Where, underneath the grove of sycamore That westward rooteth from the city&#39;s side, So early walking did I see your son Towards him I made, but he was ware of me And stole into the covert of the wood I, measuring his affections by my own, That most are busied when they&#39;re most alone,Pursued my humour not pursuing his, And gladly shunn&#39;d who gladly fled from me&quot; . mytext . &#34;Madam, an hour before the worshipp&#39;d sun Peer&#39;d forth the golden window of the east. A troubled mind drave me to walk abroad; Where, underneath the grove of sycamore. That westward rooteth from the city&#39;s side, So early walking did I see your son Towards him I made, but he was ware of me And stole into the covert of the wood I, measuring his affections by my own, That most are busied when they&#39;re most alone,Pursued my humour not pursuing his, And gladly shunn&#39;d who gladly fled from me.&#34; . sent = sent_tokenize(mytext) print(sent) . [&#34;Madam, an hour before the worshipp&#39;d sun Peer&#39;d forth the golden window of the east.&#34;, &#39;A troubled mind drave me to walk abroad; Where, underneath the grove of sycamore.&#39;, &#34;That westward rooteth from the city&#39;s side, So early walking did I see your son Towards him I made, but he was ware of me And stole into the covert of the wood I, measuring his affections by my own, That most are busied when they&#39;re most alone,Pursued my humour not pursuing his, And gladly shunn&#39;d who gladly fled from me.&#34;] . sent = sent_tokenize(textdata) print(sent) . [&#34;Madam, an hour before the worshipp&#39;d sun Peer&#39;d forth the golden window of the east, A troubled mind drave me to walk abroad; Where, underneath the grove of sycamore That westward rooteth from the city&#39;s side, So early walking did I see your son Towards him I made, but he was ware of me And stole into the covert of the wood I, measuring his affections by my own, That most are busied when they&#39;re most alone,Pursued my humour not pursuing his, And gladly shunn&#39;d who gladly fled from me&#34;] . print(word_tokenize(sent[0])) . [&#39;Madam&#39;, &#39;,&#39;, &#39;an&#39;, &#39;hour&#39;, &#39;before&#39;, &#39;the&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;the&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;of&#39;, &#39;the&#39;, &#39;east&#39;, &#39;,&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;me&#39;, &#39;to&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;;&#39;, &#39;Where&#39;, &#39;,&#39;, &#39;underneath&#39;, &#39;the&#39;, &#39;grove&#39;, &#39;of&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;from&#39;, &#39;the&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;,&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;did&#39;, &#39;I&#39;, &#39;see&#39;, &#39;your&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;him&#39;, &#39;I&#39;, &#39;made&#39;, &#39;,&#39;, &#39;but&#39;, &#39;he&#39;, &#39;was&#39;, &#39;ware&#39;, &#39;of&#39;, &#39;me&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;into&#39;, &#39;the&#39;, &#39;covert&#39;, &#39;of&#39;, &#39;the&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;,&#39;, &#39;measuring&#39;, &#39;his&#39;, &#39;affections&#39;, &#39;by&#39;, &#39;my&#39;, &#39;own&#39;, &#39;,&#39;, &#39;That&#39;, &#39;most&#39;, &#39;are&#39;, &#39;busied&#39;, &#39;when&#39;, &#39;they&#39;, &#34;&#39;re&#34;, &#39;most&#39;, &#39;alone&#39;, &#39;,&#39;, &#39;Pursued&#39;, &#39;my&#39;, &#39;humour&#39;, &#39;not&#39;, &#39;pursuing&#39;, &#39;his&#39;, &#39;,&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;who&#39;, &#39;gladly&#39;, &#39;fled&#39;, &#39;from&#39;, &#39;me&#39;] . words = [] for s in sent: for w in word_tokenize(s): words.append(w) . print(words) . [&#39;Madam&#39;, &#39;,&#39;, &#39;an&#39;, &#39;hour&#39;, &#39;before&#39;, &#39;the&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;the&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;of&#39;, &#39;the&#39;, &#39;east&#39;, &#39;,&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;me&#39;, &#39;to&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;;&#39;, &#39;Where&#39;, &#39;,&#39;, &#39;underneath&#39;, &#39;the&#39;, &#39;grove&#39;, &#39;of&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;from&#39;, &#39;the&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;,&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;did&#39;, &#39;I&#39;, &#39;see&#39;, &#39;your&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;him&#39;, &#39;I&#39;, &#39;made&#39;, &#39;,&#39;, &#39;but&#39;, &#39;he&#39;, &#39;was&#39;, &#39;ware&#39;, &#39;of&#39;, &#39;me&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;into&#39;, &#39;the&#39;, &#39;covert&#39;, &#39;of&#39;, &#39;the&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;,&#39;, &#39;measuring&#39;, &#39;his&#39;, &#39;affections&#39;, &#39;by&#39;, &#39;my&#39;, &#39;own&#39;, &#39;,&#39;, &#39;That&#39;, &#39;most&#39;, &#39;are&#39;, &#39;busied&#39;, &#39;when&#39;, &#39;they&#39;, &#34;&#39;re&#34;, &#39;most&#39;, &#39;alone&#39;, &#39;,&#39;, &#39;Pursued&#39;, &#39;my&#39;, &#39;humour&#39;, &#39;not&#39;, &#39;pursuing&#39;, &#39;his&#39;, &#39;,&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;who&#39;, &#39;gladly&#39;, &#39;fled&#39;, &#39;from&#39;, &#39;me&#39;] . from nltk.corpus import stopwords from string import punctuation nltk.download(&#39;stopwords&#39;) . [nltk_data] Downloading package stopwords to [nltk_data] C: Users LENOVO AppData Roaming nltk_data... [nltk_data] Package stopwords is already up-to-date! . True . print(punctuation) . !&#34;#$%&amp;&#39;()*+,-./:;&lt;=&gt;?@[ ]^_`{|}~ . . print(stopwords.words(&#39;english&#39;)) . [&#39;i&#39;, &#39;me&#39;, &#39;my&#39;, &#39;myself&#39;, &#39;we&#39;, &#39;our&#39;, &#39;ours&#39;, &#39;ourselves&#39;, &#39;you&#39;, &#34;you&#39;re&#34;, &#34;you&#39;ve&#34;, &#34;you&#39;ll&#34;, &#34;you&#39;d&#34;, &#39;your&#39;, &#39;yours&#39;, &#39;yourself&#39;, &#39;yourselves&#39;, &#39;he&#39;, &#39;him&#39;, &#39;his&#39;, &#39;himself&#39;, &#39;she&#39;, &#34;she&#39;s&#34;, &#39;her&#39;, &#39;hers&#39;, &#39;herself&#39;, &#39;it&#39;, &#34;it&#39;s&#34;, &#39;its&#39;, &#39;itself&#39;, &#39;they&#39;, &#39;them&#39;, &#39;their&#39;, &#39;theirs&#39;, &#39;themselves&#39;, &#39;what&#39;, &#39;which&#39;, &#39;who&#39;, &#39;whom&#39;, &#39;this&#39;, &#39;that&#39;, &#34;that&#39;ll&#34;, &#39;these&#39;, &#39;those&#39;, &#39;am&#39;, &#39;is&#39;, &#39;are&#39;, &#39;was&#39;, &#39;were&#39;, &#39;be&#39;, &#39;been&#39;, &#39;being&#39;, &#39;have&#39;, &#39;has&#39;, &#39;had&#39;, &#39;having&#39;, &#39;do&#39;, &#39;does&#39;, &#39;did&#39;, &#39;doing&#39;, &#39;a&#39;, &#39;an&#39;, &#39;the&#39;, &#39;and&#39;, &#39;but&#39;, &#39;if&#39;, &#39;or&#39;, &#39;because&#39;, &#39;as&#39;, &#39;until&#39;, &#39;while&#39;, &#39;of&#39;, &#39;at&#39;, &#39;by&#39;, &#39;for&#39;, &#39;with&#39;, &#39;about&#39;, &#39;against&#39;, &#39;between&#39;, &#39;into&#39;, &#39;through&#39;, &#39;during&#39;, &#39;before&#39;, &#39;after&#39;, &#39;above&#39;, &#39;below&#39;, &#39;to&#39;, &#39;from&#39;, &#39;up&#39;, &#39;down&#39;, &#39;in&#39;, &#39;out&#39;, &#39;on&#39;, &#39;off&#39;, &#39;over&#39;, &#39;under&#39;, &#39;again&#39;, &#39;further&#39;, &#39;then&#39;, &#39;once&#39;, &#39;here&#39;, &#39;there&#39;, &#39;when&#39;, &#39;where&#39;, &#39;why&#39;, &#39;how&#39;, &#39;all&#39;, &#39;any&#39;, &#39;both&#39;, &#39;each&#39;, &#39;few&#39;, &#39;more&#39;, &#39;most&#39;, &#39;other&#39;, &#39;some&#39;, &#39;such&#39;, &#39;no&#39;, &#39;nor&#39;, &#39;not&#39;, &#39;only&#39;, &#39;own&#39;, &#39;same&#39;, &#39;so&#39;, &#39;than&#39;, &#39;too&#39;, &#39;very&#39;, &#39;s&#39;, &#39;t&#39;, &#39;can&#39;, &#39;will&#39;, &#39;just&#39;, &#39;don&#39;, &#34;don&#39;t&#34;, &#39;should&#39;, &#34;should&#39;ve&#34;, &#39;now&#39;, &#39;d&#39;, &#39;ll&#39;, &#39;m&#39;, &#39;o&#39;, &#39;re&#39;, &#39;ve&#39;, &#39;y&#39;, &#39;ain&#39;, &#39;aren&#39;, &#34;aren&#39;t&#34;, &#39;couldn&#39;, &#34;couldn&#39;t&#34;, &#39;didn&#39;, &#34;didn&#39;t&#34;, &#39;doesn&#39;, &#34;doesn&#39;t&#34;, &#39;hadn&#39;, &#34;hadn&#39;t&#34;, &#39;hasn&#39;, &#34;hasn&#39;t&#34;, &#39;haven&#39;, &#34;haven&#39;t&#34;, &#39;isn&#39;, &#34;isn&#39;t&#34;, &#39;ma&#39;, &#39;mightn&#39;, &#34;mightn&#39;t&#34;, &#39;mustn&#39;, &#34;mustn&#39;t&#34;, &#39;needn&#39;, &#34;needn&#39;t&#34;, &#39;shan&#39;, &#34;shan&#39;t&#34;, &#39;shouldn&#39;, &#34;shouldn&#39;t&#34;, &#39;wasn&#39;, &#34;wasn&#39;t&#34;, &#39;weren&#39;, &#34;weren&#39;t&#34;, &#39;won&#39;, &#34;won&#39;t&#34;, &#39;wouldn&#39;, &#34;wouldn&#39;t&#34;] . print(list(punctuation)) . [&#39;!&#39;, &#39;&#34;&#39;, &#39;#&#39;, &#39;$&#39;, &#39;%&#39;, &#39;&amp;&#39;, &#34;&#39;&#34;, &#39;(&#39;, &#39;)&#39;, &#39;*&#39;, &#39;+&#39;, &#39;,&#39;, &#39;-&#39;, &#39;.&#39;, &#39;/&#39;, &#39;:&#39;, &#39;;&#39;, &#39;&lt;&#39;, &#39;=&#39;, &#39;&gt;&#39;, &#39;?&#39;, &#39;@&#39;, &#39;[&#39;, &#39; &#39;, &#39;]&#39;, &#39;^&#39;, &#39;_&#39;, &#39;`&#39;, &#39;{&#39;, &#39;|&#39;, &#39;}&#39;, &#39;~&#39;] . myStopWords = list(punctuation) + stopwords.words(&#39;english&#39;) . print(words) . [&#39;Madam&#39;, &#39;,&#39;, &#39;an&#39;, &#39;hour&#39;, &#39;before&#39;, &#39;the&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;the&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;of&#39;, &#39;the&#39;, &#39;east&#39;, &#39;,&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;me&#39;, &#39;to&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;;&#39;, &#39;Where&#39;, &#39;,&#39;, &#39;underneath&#39;, &#39;the&#39;, &#39;grove&#39;, &#39;of&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;from&#39;, &#39;the&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;,&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;did&#39;, &#39;I&#39;, &#39;see&#39;, &#39;your&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;him&#39;, &#39;I&#39;, &#39;made&#39;, &#39;,&#39;, &#39;but&#39;, &#39;he&#39;, &#39;was&#39;, &#39;ware&#39;, &#39;of&#39;, &#39;me&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;into&#39;, &#39;the&#39;, &#39;covert&#39;, &#39;of&#39;, &#39;the&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;,&#39;, &#39;measuring&#39;, &#39;his&#39;, &#39;affections&#39;, &#39;by&#39;, &#39;my&#39;, &#39;own&#39;, &#39;,&#39;, &#39;That&#39;, &#39;most&#39;, &#39;are&#39;, &#39;busied&#39;, &#39;when&#39;, &#39;they&#39;, &#34;&#39;re&#34;, &#39;most&#39;, &#39;alone&#39;, &#39;,&#39;, &#39;Pursued&#39;, &#39;my&#39;, &#39;humour&#39;, &#39;not&#39;, &#39;pursuing&#39;, &#39;his&#39;, &#39;,&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;who&#39;, &#39;gladly&#39;, &#39;fled&#39;, &#39;from&#39;, &#39;me&#39;] . wordsNoStop = [] for i in words: if i not in myStopWords: wordsNoStop.append(i) print(words) print(wordsNoStop) . [&#39;Madam&#39;, &#39;,&#39;, &#39;an&#39;, &#39;hour&#39;, &#39;before&#39;, &#39;the&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;the&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;of&#39;, &#39;the&#39;, &#39;east&#39;, &#39;,&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;me&#39;, &#39;to&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;;&#39;, &#39;Where&#39;, &#39;,&#39;, &#39;underneath&#39;, &#39;the&#39;, &#39;grove&#39;, &#39;of&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;from&#39;, &#39;the&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;,&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;did&#39;, &#39;I&#39;, &#39;see&#39;, &#39;your&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;him&#39;, &#39;I&#39;, &#39;made&#39;, &#39;,&#39;, &#39;but&#39;, &#39;he&#39;, &#39;was&#39;, &#39;ware&#39;, &#39;of&#39;, &#39;me&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;into&#39;, &#39;the&#39;, &#39;covert&#39;, &#39;of&#39;, &#39;the&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;,&#39;, &#39;measuring&#39;, &#39;his&#39;, &#39;affections&#39;, &#39;by&#39;, &#39;my&#39;, &#39;own&#39;, &#39;,&#39;, &#39;That&#39;, &#39;most&#39;, &#39;are&#39;, &#39;busied&#39;, &#39;when&#39;, &#39;they&#39;, &#34;&#39;re&#34;, &#39;most&#39;, &#39;alone&#39;, &#39;,&#39;, &#39;Pursued&#39;, &#39;my&#39;, &#39;humour&#39;, &#39;not&#39;, &#39;pursuing&#39;, &#39;his&#39;, &#39;,&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;who&#39;, &#39;gladly&#39;, &#39;fled&#39;, &#39;from&#39;, &#39;me&#39;] [&#39;Madam&#39;, &#39;hour&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;east&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;Where&#39;, &#39;underneath&#39;, &#39;grove&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;I&#39;, &#39;see&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;I&#39;, &#39;made&#39;, &#39;ware&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;covert&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;measuring&#39;, &#39;affections&#39;, &#39;That&#39;, &#39;busied&#39;, &#34;&#39;re&#34;, &#39;alone&#39;, &#39;Pursued&#39;, &#39;humour&#39;, &#39;pursuing&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;gladly&#39;, &#39;fled&#39;] . wordsNoStopComp = [w for w in words if w not in myStopWords] print(wordsNoStopComp) . [&#39;Madam&#39;, &#39;hour&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;east&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;Where&#39;, &#39;underneath&#39;, &#39;grove&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;I&#39;, &#39;see&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;I&#39;, &#39;made&#39;, &#39;ware&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;covert&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;measuring&#39;, &#39;affections&#39;, &#39;That&#39;, &#39;busied&#39;, &#34;&#39;re&#34;, &#39;alone&#39;, &#39;Pursued&#39;, &#39;humour&#39;, &#39;pursuing&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;gladly&#39;, &#39;fled&#39;] . from nltk.probability import FreqDist . freq = FreqDist(wordsNoStop) . freq . FreqDist({&#34;&#39;d&#34;: 3, &#39;I&#39;: 3, &#39;That&#39;: 2, &#39;And&#39;: 2, &#39;gladly&#39;: 2, &#39;Madam&#39;: 1, &#39;hour&#39;: 1, &#39;worshipp&#39;: 1, &#39;sun&#39;: 1, &#39;Peer&#39;: 1, ...}) . for i in sorted(freq, key=freq.get, reverse=True)[:20]: print(i,freq[i]) . &#39;d 3 I 3 That 2 And 2 gladly 2 Madam 1 hour 1 worshipp 1 sun 1 Peer 1 forth 1 golden 1 window 1 east 1 A 1 troubled 1 mind 1 drave 1 walk 1 abroad 1 . hide The most used word here is &#39;d which I guess is a part of past tense form. But on its own it doesn&#39;t make sense . collapse This is my analysis for Natural language processing assignment. Thank you! .",
            "url": "https://rini278.github.io/NLP/2022/03/12/NLPassignment.html",
            "relUrl": "/2022/03/12/NLPassignment.html",
            "date": " • Mar 12, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "import nltk from nltk import sent_tokenize,word_tokenize . nltk.download(&#39;punkt&#39;) . [nltk_data] Downloading package punkt to [nltk_data] C: Users LENOVO AppData Roaming nltk_data... [nltk_data] Package punkt is already up-to-date! . True . text= open(&#39;New Text Document.txt&#39;) . . mytext = text.read() . textdata=&quot;Madam, an hour before the worshipp&#39;d sun Peer&#39;d forth the golden window of the east, A troubled mind drave me to walk abroad; Where, underneath the grove of sycamore That westward rooteth from the city&#39;s side, So early walking did I see your son Towards him I made, but he was ware of me And stole into the covert of the wood I, measuring his affections by my own, That most are busied when they&#39;re most alone,Pursued my humour not pursuing his, And gladly shunn&#39;d who gladly fled from me&quot; . text . &lt;_io.TextIOWrapper name=&#39;New Text Document.txt&#39; mode=&#39;r&#39; encoding=&#39;cp1252&#39;&gt; . mytext . &#34;Madam, an hour before the worshipp&#39;d sun Peer&#39;d forth the golden window of the east. A troubled mind drave me to walk abroad; Where, underneath the grove of sycamore. That westward rooteth from the city&#39;s side, So early walking did I see your son Towards him I made, but he was ware of me And stole into the covert of the wood I, measuring his affections by my own, That most are busied when they&#39;re most alone,Pursued my humour not pursuing his, And gladly shunn&#39;d who gladly fled from me.&#34; . sent = sent_tokenize(mytext) print(sent) . [&#34;Madam, an hour before the worshipp&#39;d sun Peer&#39;d forth the golden window of the east.&#34;, &#39;A troubled mind drave me to walk abroad; Where, underneath the grove of sycamore.&#39;, &#34;That westward rooteth from the city&#39;s side, So early walking did I see your son Towards him I made, but he was ware of me And stole into the covert of the wood I, measuring his affections by my own, That most are busied when they&#39;re most alone,Pursued my humour not pursuing his, And gladly shunn&#39;d who gladly fled from me.&#34;] . sent = sent_tokenize(textdata) print(sent) . [&#34;Madam, an hour before the worshipp&#39;d sun Peer&#39;d forth the golden window of the east, A troubled mind drave me to walk abroad; Where, underneath the grove of sycamore That westward rooteth from the city&#39;s side, So early walking did I see your son Towards him I made, but he was ware of me And stole into the covert of the wood I, measuring his affections by my own, That most are busied when they&#39;re most alone,Pursued my humour not pursuing his, And gladly shunn&#39;d who gladly fled from me&#34;] . print(word_tokenize(sent[0])) . [&#39;Madam&#39;, &#39;,&#39;, &#39;an&#39;, &#39;hour&#39;, &#39;before&#39;, &#39;the&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;the&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;of&#39;, &#39;the&#39;, &#39;east&#39;, &#39;,&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;me&#39;, &#39;to&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;;&#39;, &#39;Where&#39;, &#39;,&#39;, &#39;underneath&#39;, &#39;the&#39;, &#39;grove&#39;, &#39;of&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;from&#39;, &#39;the&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;,&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;did&#39;, &#39;I&#39;, &#39;see&#39;, &#39;your&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;him&#39;, &#39;I&#39;, &#39;made&#39;, &#39;,&#39;, &#39;but&#39;, &#39;he&#39;, &#39;was&#39;, &#39;ware&#39;, &#39;of&#39;, &#39;me&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;into&#39;, &#39;the&#39;, &#39;covert&#39;, &#39;of&#39;, &#39;the&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;,&#39;, &#39;measuring&#39;, &#39;his&#39;, &#39;affections&#39;, &#39;by&#39;, &#39;my&#39;, &#39;own&#39;, &#39;,&#39;, &#39;That&#39;, &#39;most&#39;, &#39;are&#39;, &#39;busied&#39;, &#39;when&#39;, &#39;they&#39;, &#34;&#39;re&#34;, &#39;most&#39;, &#39;alone&#39;, &#39;,&#39;, &#39;Pursued&#39;, &#39;my&#39;, &#39;humour&#39;, &#39;not&#39;, &#39;pursuing&#39;, &#39;his&#39;, &#39;,&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;who&#39;, &#39;gladly&#39;, &#39;fled&#39;, &#39;from&#39;, &#39;me&#39;] . words = [] for s in sent: for w in word_tokenize(s): words.append(w) . print(words) . [&#39;Madam&#39;, &#39;,&#39;, &#39;an&#39;, &#39;hour&#39;, &#39;before&#39;, &#39;the&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;the&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;of&#39;, &#39;the&#39;, &#39;east&#39;, &#39;,&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;me&#39;, &#39;to&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;;&#39;, &#39;Where&#39;, &#39;,&#39;, &#39;underneath&#39;, &#39;the&#39;, &#39;grove&#39;, &#39;of&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;from&#39;, &#39;the&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;,&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;did&#39;, &#39;I&#39;, &#39;see&#39;, &#39;your&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;him&#39;, &#39;I&#39;, &#39;made&#39;, &#39;,&#39;, &#39;but&#39;, &#39;he&#39;, &#39;was&#39;, &#39;ware&#39;, &#39;of&#39;, &#39;me&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;into&#39;, &#39;the&#39;, &#39;covert&#39;, &#39;of&#39;, &#39;the&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;,&#39;, &#39;measuring&#39;, &#39;his&#39;, &#39;affections&#39;, &#39;by&#39;, &#39;my&#39;, &#39;own&#39;, &#39;,&#39;, &#39;That&#39;, &#39;most&#39;, &#39;are&#39;, &#39;busied&#39;, &#39;when&#39;, &#39;they&#39;, &#34;&#39;re&#34;, &#39;most&#39;, &#39;alone&#39;, &#39;,&#39;, &#39;Pursued&#39;, &#39;my&#39;, &#39;humour&#39;, &#39;not&#39;, &#39;pursuing&#39;, &#39;his&#39;, &#39;,&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;who&#39;, &#39;gladly&#39;, &#39;fled&#39;, &#39;from&#39;, &#39;me&#39;] . from nltk.corpus import stopwords from string import punctuation nltk.download(&#39;stopwords&#39;) . [nltk_data] Downloading package stopwords to [nltk_data] C: Users LENOVO AppData Roaming nltk_data... [nltk_data] Package stopwords is already up-to-date! . True . print(punctuation) . !&#34;#$%&amp;&#39;()*+,-./:;&lt;=&gt;?@[ ]^_`{|}~ . print(stopwords.words(&#39;english&#39;)) . [&#39;i&#39;, &#39;me&#39;, &#39;my&#39;, &#39;myself&#39;, &#39;we&#39;, &#39;our&#39;, &#39;ours&#39;, &#39;ourselves&#39;, &#39;you&#39;, &#34;you&#39;re&#34;, &#34;you&#39;ve&#34;, &#34;you&#39;ll&#34;, &#34;you&#39;d&#34;, &#39;your&#39;, &#39;yours&#39;, &#39;yourself&#39;, &#39;yourselves&#39;, &#39;he&#39;, &#39;him&#39;, &#39;his&#39;, &#39;himself&#39;, &#39;she&#39;, &#34;she&#39;s&#34;, &#39;her&#39;, &#39;hers&#39;, &#39;herself&#39;, &#39;it&#39;, &#34;it&#39;s&#34;, &#39;its&#39;, &#39;itself&#39;, &#39;they&#39;, &#39;them&#39;, &#39;their&#39;, &#39;theirs&#39;, &#39;themselves&#39;, &#39;what&#39;, &#39;which&#39;, &#39;who&#39;, &#39;whom&#39;, &#39;this&#39;, &#39;that&#39;, &#34;that&#39;ll&#34;, &#39;these&#39;, &#39;those&#39;, &#39;am&#39;, &#39;is&#39;, &#39;are&#39;, &#39;was&#39;, &#39;were&#39;, &#39;be&#39;, &#39;been&#39;, &#39;being&#39;, &#39;have&#39;, &#39;has&#39;, &#39;had&#39;, &#39;having&#39;, &#39;do&#39;, &#39;does&#39;, &#39;did&#39;, &#39;doing&#39;, &#39;a&#39;, &#39;an&#39;, &#39;the&#39;, &#39;and&#39;, &#39;but&#39;, &#39;if&#39;, &#39;or&#39;, &#39;because&#39;, &#39;as&#39;, &#39;until&#39;, &#39;while&#39;, &#39;of&#39;, &#39;at&#39;, &#39;by&#39;, &#39;for&#39;, &#39;with&#39;, &#39;about&#39;, &#39;against&#39;, &#39;between&#39;, &#39;into&#39;, &#39;through&#39;, &#39;during&#39;, &#39;before&#39;, &#39;after&#39;, &#39;above&#39;, &#39;below&#39;, &#39;to&#39;, &#39;from&#39;, &#39;up&#39;, &#39;down&#39;, &#39;in&#39;, &#39;out&#39;, &#39;on&#39;, &#39;off&#39;, &#39;over&#39;, &#39;under&#39;, &#39;again&#39;, &#39;further&#39;, &#39;then&#39;, &#39;once&#39;, &#39;here&#39;, &#39;there&#39;, &#39;when&#39;, &#39;where&#39;, &#39;why&#39;, &#39;how&#39;, &#39;all&#39;, &#39;any&#39;, &#39;both&#39;, &#39;each&#39;, &#39;few&#39;, &#39;more&#39;, &#39;most&#39;, &#39;other&#39;, &#39;some&#39;, &#39;such&#39;, &#39;no&#39;, &#39;nor&#39;, &#39;not&#39;, &#39;only&#39;, &#39;own&#39;, &#39;same&#39;, &#39;so&#39;, &#39;than&#39;, &#39;too&#39;, &#39;very&#39;, &#39;s&#39;, &#39;t&#39;, &#39;can&#39;, &#39;will&#39;, &#39;just&#39;, &#39;don&#39;, &#34;don&#39;t&#34;, &#39;should&#39;, &#34;should&#39;ve&#34;, &#39;now&#39;, &#39;d&#39;, &#39;ll&#39;, &#39;m&#39;, &#39;o&#39;, &#39;re&#39;, &#39;ve&#39;, &#39;y&#39;, &#39;ain&#39;, &#39;aren&#39;, &#34;aren&#39;t&#34;, &#39;couldn&#39;, &#34;couldn&#39;t&#34;, &#39;didn&#39;, &#34;didn&#39;t&#34;, &#39;doesn&#39;, &#34;doesn&#39;t&#34;, &#39;hadn&#39;, &#34;hadn&#39;t&#34;, &#39;hasn&#39;, &#34;hasn&#39;t&#34;, &#39;haven&#39;, &#34;haven&#39;t&#34;, &#39;isn&#39;, &#34;isn&#39;t&#34;, &#39;ma&#39;, &#39;mightn&#39;, &#34;mightn&#39;t&#34;, &#39;mustn&#39;, &#34;mustn&#39;t&#34;, &#39;needn&#39;, &#34;needn&#39;t&#34;, &#39;shan&#39;, &#34;shan&#39;t&#34;, &#39;shouldn&#39;, &#34;shouldn&#39;t&#34;, &#39;wasn&#39;, &#34;wasn&#39;t&#34;, &#39;weren&#39;, &#34;weren&#39;t&#34;, &#39;won&#39;, &#34;won&#39;t&#34;, &#39;wouldn&#39;, &#34;wouldn&#39;t&#34;] . print(list(punctuation)) . [&#39;!&#39;, &#39;&#34;&#39;, &#39;#&#39;, &#39;$&#39;, &#39;%&#39;, &#39;&amp;&#39;, &#34;&#39;&#34;, &#39;(&#39;, &#39;)&#39;, &#39;*&#39;, &#39;+&#39;, &#39;,&#39;, &#39;-&#39;, &#39;.&#39;, &#39;/&#39;, &#39;:&#39;, &#39;;&#39;, &#39;&lt;&#39;, &#39;=&#39;, &#39;&gt;&#39;, &#39;?&#39;, &#39;@&#39;, &#39;[&#39;, &#39; &#39;, &#39;]&#39;, &#39;^&#39;, &#39;_&#39;, &#39;`&#39;, &#39;{&#39;, &#39;|&#39;, &#39;}&#39;, &#39;~&#39;] . myStopWords = list(punctuation) + stopwords.words(&#39;english&#39;) . print(words) . [&#39;Madam&#39;, &#39;,&#39;, &#39;an&#39;, &#39;hour&#39;, &#39;before&#39;, &#39;the&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;the&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;of&#39;, &#39;the&#39;, &#39;east&#39;, &#39;,&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;me&#39;, &#39;to&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;;&#39;, &#39;Where&#39;, &#39;,&#39;, &#39;underneath&#39;, &#39;the&#39;, &#39;grove&#39;, &#39;of&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;from&#39;, &#39;the&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;,&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;did&#39;, &#39;I&#39;, &#39;see&#39;, &#39;your&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;him&#39;, &#39;I&#39;, &#39;made&#39;, &#39;,&#39;, &#39;but&#39;, &#39;he&#39;, &#39;was&#39;, &#39;ware&#39;, &#39;of&#39;, &#39;me&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;into&#39;, &#39;the&#39;, &#39;covert&#39;, &#39;of&#39;, &#39;the&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;,&#39;, &#39;measuring&#39;, &#39;his&#39;, &#39;affections&#39;, &#39;by&#39;, &#39;my&#39;, &#39;own&#39;, &#39;,&#39;, &#39;That&#39;, &#39;most&#39;, &#39;are&#39;, &#39;busied&#39;, &#39;when&#39;, &#39;they&#39;, &#34;&#39;re&#34;, &#39;most&#39;, &#39;alone&#39;, &#39;,&#39;, &#39;Pursued&#39;, &#39;my&#39;, &#39;humour&#39;, &#39;not&#39;, &#39;pursuing&#39;, &#39;his&#39;, &#39;,&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;who&#39;, &#39;gladly&#39;, &#39;fled&#39;, &#39;from&#39;, &#39;me&#39;] . wordsNoStop = [] for i in words: if i not in myStopWords: wordsNoStop.append(i) print(words) print(wordsNoStop) . [&#39;Madam&#39;, &#39;,&#39;, &#39;an&#39;, &#39;hour&#39;, &#39;before&#39;, &#39;the&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;the&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;of&#39;, &#39;the&#39;, &#39;east&#39;, &#39;,&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;me&#39;, &#39;to&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;;&#39;, &#39;Where&#39;, &#39;,&#39;, &#39;underneath&#39;, &#39;the&#39;, &#39;grove&#39;, &#39;of&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;from&#39;, &#39;the&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;,&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;did&#39;, &#39;I&#39;, &#39;see&#39;, &#39;your&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;him&#39;, &#39;I&#39;, &#39;made&#39;, &#39;,&#39;, &#39;but&#39;, &#39;he&#39;, &#39;was&#39;, &#39;ware&#39;, &#39;of&#39;, &#39;me&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;into&#39;, &#39;the&#39;, &#39;covert&#39;, &#39;of&#39;, &#39;the&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;,&#39;, &#39;measuring&#39;, &#39;his&#39;, &#39;affections&#39;, &#39;by&#39;, &#39;my&#39;, &#39;own&#39;, &#39;,&#39;, &#39;That&#39;, &#39;most&#39;, &#39;are&#39;, &#39;busied&#39;, &#39;when&#39;, &#39;they&#39;, &#34;&#39;re&#34;, &#39;most&#39;, &#39;alone&#39;, &#39;,&#39;, &#39;Pursued&#39;, &#39;my&#39;, &#39;humour&#39;, &#39;not&#39;, &#39;pursuing&#39;, &#39;his&#39;, &#39;,&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;who&#39;, &#39;gladly&#39;, &#39;fled&#39;, &#39;from&#39;, &#39;me&#39;] [&#39;Madam&#39;, &#39;hour&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;east&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;Where&#39;, &#39;underneath&#39;, &#39;grove&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;I&#39;, &#39;see&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;I&#39;, &#39;made&#39;, &#39;ware&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;covert&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;measuring&#39;, &#39;affections&#39;, &#39;That&#39;, &#39;busied&#39;, &#34;&#39;re&#34;, &#39;alone&#39;, &#39;Pursued&#39;, &#39;humour&#39;, &#39;pursuing&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;gladly&#39;, &#39;fled&#39;] . wordsNoStopComp = [w for w in words if w not in myStopWords] print(wordsNoStopComp) . [&#39;Madam&#39;, &#39;hour&#39;, &#39;worshipp&#39;, &#34;&#39;d&#34;, &#39;sun&#39;, &#39;Peer&#39;, &#34;&#39;d&#34;, &#39;forth&#39;, &#39;golden&#39;, &#39;window&#39;, &#39;east&#39;, &#39;A&#39;, &#39;troubled&#39;, &#39;mind&#39;, &#39;drave&#39;, &#39;walk&#39;, &#39;abroad&#39;, &#39;Where&#39;, &#39;underneath&#39;, &#39;grove&#39;, &#39;sycamore&#39;, &#39;That&#39;, &#39;westward&#39;, &#39;rooteth&#39;, &#39;city&#39;, &#34;&#39;s&#34;, &#39;side&#39;, &#39;So&#39;, &#39;early&#39;, &#39;walking&#39;, &#39;I&#39;, &#39;see&#39;, &#39;son&#39;, &#39;Towards&#39;, &#39;I&#39;, &#39;made&#39;, &#39;ware&#39;, &#39;And&#39;, &#39;stole&#39;, &#39;covert&#39;, &#39;wood&#39;, &#39;I&#39;, &#39;measuring&#39;, &#39;affections&#39;, &#39;That&#39;, &#39;busied&#39;, &#34;&#39;re&#34;, &#39;alone&#39;, &#39;Pursued&#39;, &#39;humour&#39;, &#39;pursuing&#39;, &#39;And&#39;, &#39;gladly&#39;, &#39;shunn&#39;, &#34;&#39;d&#34;, &#39;gladly&#39;, &#39;fled&#39;] . from nltk.probability import FreqDist . freq = FreqDist(wordsNoStop) . freq . FreqDist({&#34;&#39;d&#34;: 3, &#39;I&#39;: 3, &#39;That&#39;: 2, &#39;And&#39;: 2, &#39;gladly&#39;: 2, &#39;Madam&#39;: 1, &#39;hour&#39;: 1, &#39;worshipp&#39;: 1, &#39;sun&#39;: 1, &#39;Peer&#39;: 1, ...}) . for i in sorted(freq, key=freq.get, reverse=True)[:20]: print(i,freq[i]) . &#39;d 3 I 3 That 2 And 2 gladly 2 Madam 1 hour 1 worshipp 1 sun 1 Peer 1 forth 1 golden 1 window 1 east 1 A 1 troubled 1 mind 1 drave 1 walk 1 abroad 1 .",
            "url": "https://rini278.github.io/NLP/2022/03/12/Assignment-9.html",
            "relUrl": "/2022/03/12/Assignment-9.html",
            "date": " • Mar 12, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://rini278.github.io/NLP/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://rini278.github.io/NLP/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://rini278.github.io/NLP/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}